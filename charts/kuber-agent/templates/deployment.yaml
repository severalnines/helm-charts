apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "agent-operator.fullname" . }}-controller-manager
  namespace: {{ include "agent-operator.namespace" . }}
  labels:
    control-plane: controller-manager
    {{- include "agent-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
      {{- include "agent-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
        {{- include "agent-operator.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
        helm.sh/release.revision: {{ .Release.Revision | quote }}
    spec:
      securityContext:
        runAsNonRoot: true
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
      {{- if .Values.dev.enabled }}
      initContainers:
      - name: prewarm-caches
        image: "{{ .Values.image.repository }}:{{ if .Values.image.useDevelopmentImage }}{{ .Values.image.developmentImageTag }}{{ else }}{{ .Values.image.tag | default .Chart.AppVersion }}{{ end }}"
        imagePullPolicy: {{ 
          .Values.image.pullPolicy 
        }}
        command: ["/bin/sh","-lc"]
        args:
          - |
            if [ -f /workspace/agent-operator/go.mod ]; then
              cd /workspace/agent-operator && timeout 180 /usr/local/go/bin/go mod download || true;
            else
              echo "[prewarm] /workspace/agent-operator/go.mod not found, skipping";
            fi
        env:
        - name: GOMODCACHE
          value: /home/nonroot/go/pkg/mod
        - name: GOCACHE
          value: /home/nonroot/.cache/go-build
        - name: GOWORK
          value: /workspace/go.work
        - name: GOPROXY
          value: https://proxy.golang.org,direct
        volumeMounts:
        - name: go-cache
          mountPath: /home/nonroot/go/pkg/mod
          subPath: gomod
        - name: go-cache
          mountPath: /home/nonroot/.cache/go-build
          subPath: gobuild
      {{- end }}
      containers:
      - name: manager
        {{- if .Values.dev.enabled }}
        command: {{ toJson .Values.dev.command }}
        {{- end }}
        image: "{{ .Values.image.repository | default (include "agent-operator.imageRepositoryDefault" .) }}:{{ if .Values.image.useDevelopmentImage }}{{ .Values.image.developmentImageTag }}{{ else }}{{ .Values.image.tag | default .Chart.AppVersion }}{{ end }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | default (include "agent-operator.imagePullPolicyDefault" .) }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        args:
        - "--health-probe-bind-address=:{{ .Values.controllerManager.healthProbe.port }}"
        - "--metrics-bind-address=0"
        - "--leader-elect"
        - "--env={{ .Values.env }}"
        {{- if .Values.controllerManager.controllers }}
        - "--controllers={{ join "," .Values.controllerManager.controllers }}"
        {{- end }}
        {{- if .Values.debug.logLevel }}
        - "--log-level={{ .Values.debug.logLevel }}"
        {{- end }}
        env:
        - name: PROXY_GRPC_ADDRESS
          value: {{ .Values.proxy.grpcAddress }}
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if .Values.agent.name }}
        - name: AGENT_NAME
          value: {{ .Values.agent.name }}
        {{- end }}
        # GitOps hints
        - name: ARGOCD_NAMESPACE
          value: {{ .Values.gitops.argo.namespace | quote }}
        - name: FLUX_NAMESPACE
          value: {{ .Values.gitops.flux.namespace | quote }}
        {{- if .Values.gitops.enabled }}
        - name: APPBUNDLE_GITOPS_ENABLED
          value: "true"
        {{- end }}
        # AppBundle importer
        - name: APPBUNDLE_IMPORT_ENABLED
          value: {{ ternary "true" "false" .Values.appBundleImport.enabled | quote }}
        - name: APPBUNDLE_IMPORT_MANAGE_LIFECYCLE
          value: {{ ternary "true" "false" .Values.appBundleImport.manageLifecycle | quote }}
        {{- if .Values.appBundleImport.provider }}
        - name: APPBUNDLE_IMPORT_PROVIDER
          value: {{ .Values.appBundleImport.provider | quote }}
        {{- end }}
        {{- if .Values.appBundleImport.interval }}
        - name: APPBUNDLE_IMPORT_INTERVAL
          value: {{ .Values.appBundleImport.interval | quote }}
        {{- end }}
        {{- if .Values.appBundleImport.crNamespace }}
        - name: APPBUNDLE_IMPORT_CR_NAMESPACE
          value: {{ .Values.appBundleImport.crNamespace | quote }}
        {{- end }}
        {{- if .Values.debug.logLevel }}
        - name: LOG_LEVEL
          value: {{ .Values.debug.logLevel }}
        {{- end }}
        
        {{- if not (and .Values.dev.enabled .Values.dev.disableProbes) }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.controllerManager.healthProbe.port }}
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ .Values.controllerManager.healthProbe.port }}
          initialDelaySeconds: 5
          periodSeconds: 10
        {{- end }}
        {{- if and .Values.dev.enabled (and .Values.dev.startupProbe (not .Values.dev.disableProbes)) }}
        startupProbe:
{{ toYaml .Values.dev.startupProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.dev.enabled }}
        volumeMounts:
        - name: go-cache
          mountPath: /home/nonroot/go/pkg/mod
          subPath: gomod
        - name: go-cache
          mountPath: /home/nonroot/.cache/go-build
          subPath: gobuild
        {{- end }}
        resources:
          {{- toYaml .Values.controllerManager.manager.resources | nindent 10 }}
      serviceAccountName: {{ if .Values.mode.write.enabled }}{{ .Values.rbac.serviceAccounts.write.name }}{{ else }}{{ .Values.rbac.serviceAccounts.agent.name }}{{ end }}
      terminationGracePeriodSeconds: 10
      {{- if .Values.dev.enabled }}
      volumes:
      - name: go-cache
        persistentVolumeClaim:
          claimName: {{ .Values.dev.persistentCache.pvcName }}
      {{- end }}
        