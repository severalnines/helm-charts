# Default values for agent-operator
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Operator image configuration
image:
  repository: europe-docker.pkg.dev/severalnines-public/clustercontrol/kuber-agent
  tag: "" # Default tag is empty; deployment template will use Chart.AppVersion if not overridden
  pullPolicy: Always
  useDevelopmentImage: false # Set to true to use the developmentImageTag
  developmentImageTag: "main-dev-latest" # The tag for your 'latest' development build


# Agent configuration
agent:
  # Public key for agent authentication
  publicKey: ""
  # Name for the agent (defaults to the node name if not set)
  name: ""

# Environment setting (determines default log level if debug.logLevel is not set)
env: production # Set to "development" for debug logging by default

# Namespace configuration
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""
createNamespace: true

# Controller manager configuration
controllerManager:
  replicas: 1
  manager:
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 200m
        memory: 256Mi
  # Health probe configuration
  healthProbe:
    port: 8081

  # Optional: run only a subset of controllers. Empty = all
  # Valid: databasecluster, databaseoperator, databasebackupschedule, databasebackup, appbundle, gc
  controllers: []

# Dev overrides (command/startupProbe) - enabled via values
dev:
  enabled: false
  command: ["/usr/local/bin/devloop-operator.sh"]
  startupProbe:
    httpGet:
      path: /healthzin
      port: 8081
    failureThreshold: 120
    periodSeconds: 2
  disableProbes: true
  persistentCache:
    enabled: true
    create: false
    pvcName: operator-cache
    storageClassName: local-path
  resources: {}


rbac:
  create: true
  serviceAccounts:
    agent:
      name: agent-operator-controller-manager
      create: true
    write:
      name: agent-operator-controller-manager-write
      create: true
  clusterRead:
    includeSecrets: false      # when true, also bind s9s:cluster-read-extra per namespace
  namespaces:
    targets: []            # e.g. ["app-a", "app-b"]
    create: false          # optionally create target namespaces

mode:
  write:
    enabled: false   # when true: bind agent-write SA to s9s:cluster-write cluster-wide

# Proxy configuration for connecting to ClusterControl server
proxy:
  grpcAddress: "host.docker.internal:50051"

# Debug settings
debug:
  logLevel: "" # Explicitly set log level (e.g., "debug", "info"). Overrides the default based on 'env'.

# Cleanup configuration
# Use: helm uninstall <release-name> --set cleanup.enabled=true
cleanup:
  # Enable comprehensive cleanup during helm uninstall
  # This will delete database clusters, operators, and CRDs in proper order
  enabled: false
  
  # Timeout for each cleanup phase (in seconds)
  timeoutSeconds: 300
  
  # Image to use for cleanup jobs (kubectl image)
  image:
    repository: bitnami/kubectl
    tag: "1.28"
    pullPolicy: IfNotPresent
  
  # Resource limits for cleanup jobs
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

# GitOps integration (controllers must be installed separately; no bootstrapping here)
gitops:
  enabled: false
  # tool: "argo" | "flux"
  tool: "argo"
  argo:
    namespace: "argocd"
  flux:
    namespace: "flux-system"

# AppBundle importer configuration
appBundleImport:
  enabled: true               # Enable background importer to create AppBundle CRs from Argo/Flux
  provider: ""                # argo | flux | "" (both)
  interval: "1m"              # Sweep interval (e.g., 30s, 1m)
  crNamespace: ""             # Namespace to create AppBundle CRs (default: POD_NAMESPACE when empty)
  manageLifecycle: false       # Set spec.manageLifecycle on generated CRs

# Controller authentication (token used by controller for GitOps PRs/commits)
controllerAuth:
  secret:
    enabled: false
    name: ""   # e.g. s9s-gitops-token
    key: "token"
    value: ""
  provider: "github"   # keep option for future providers; current: github
  baseURL: ""          # optional base URL for GitHub Enterprise

