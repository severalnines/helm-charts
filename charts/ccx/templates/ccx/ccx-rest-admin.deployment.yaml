apiVersion: apps/v1
kind: Deployment
metadata:
  name: ccx-rest-admin-service
  labels:
    app: ccx-rest-admin-service
    run: ccx-rest-admin-service
spec:
  replicas: {{ .Values.ccx.services.admin.replicas | default .Values.global.replicas }}
  selector:
    matchLabels:
      app: ccx-rest-admin-service
      run: ccx-rest-admin-service
  template:
    metadata:
      labels:
        app: ccx-rest-admin-service
        run: ccx-rest-admin-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        checksum: {{ include (print $.Template.BasePath "/ccx/secrets.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/ccx/config.yaml") . | sha256sum }}
    spec:
      containers:
        - name: ccx-rest-admin-service
          image: {{ .Values.ccx.services.admin.image | default .Values.ccx.backend.image | required "No image set for admin" }}
          command: ["/bin/ccx-rest", "admin"]
          env:
            - name: CONFIG_FILE
              value: "/conf/ccx.yaml"
            - name: PROMETHEUS_URL
              value: http://{{ include "ccx.prometheusHostname" . }}:9090
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          {{- range $key, $val := .Values.ccx.services.admin.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          {{ if .Values.ccx.preferNewStores }}
            - name: PREFER_NEW_STORES
              value: "true"
          {{ end }}
          envFrom:
            - configMapRef:
                name: ccx
            - secretRef:
                name: db
            {{ if not .Values.ccx.useK8sSecrets }}
            - secretRef:
                name: vault
            {{ end }}
            - secretRef:
                name: admin-basic-auth
          ports:
            - name: service
              containerPort: 20001
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: "/conf"
          resources:
            {{- toYaml .Values.ccx.services.admin.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: ccx-config-core
      {{ with .Values.ccx.services.admin.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{ end }}
      {{ with .Values.ccx.services.admin.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{ end }}
      {{ with .Values.ccx.services.admin.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{ end }}
