apiVersion: batch/v1
kind: Job
metadata:
  name: ccx-migrate-cloud-credentials
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "555"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  # Time to live for the job after it finishes, in seconds (5 days = 5 * 24 * 60 * 60)
  ttlSecondsAfterFinished: 432000
  template:
    spec:
    {{- with .Values.ccx.services.migrate.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.ccx.services.migrate.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.ccx.services.migrate.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: migrate
          image: {{ .Values.ccx.backend.image |  required "backend image is missing" }}
          command: [ "/bin/ccxctl", "system", "migrate-cloud-credentials", "--confirm" ]
          env:
            - name: CHART_VERSION
              value: {{ .Chart.Version }}
            - name: CONFIG_FILE
              value: "/conf/ccx.yaml"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: ccx
            - secretRef:
                name: cmon-credentials
            - secretRef:
                name: db
          {{- range $name := .Values.ccx.cloudSecrets }}
            - secretRef:
                name: {{ $name }}
          {{- end }}
          volumeMounts:
            - name: conf-core
              mountPath: "/conf/ccx.yaml"
              subPath: "ccx.yaml"
      restartPolicy: Never
      volumes:
        - name: conf-core
          configMap:
            name: ccx-config-core