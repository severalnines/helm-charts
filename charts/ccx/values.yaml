## Default values for ccx.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

## REQUIRED this is used across the app to identify your instance. Use something like "apple.com" or "fbi.gov".
sessionDomain: ccx.local
## REQUIRED fqdn of this ccx instance, for example "ccx.example.com".
ccxFQDN: ccx.local
## REQUIRED fqdn for cluster control instance provided with this ccx instance.
ccFQDN: cc.local
## OPTIONAL cross origin urls which are not managed by ccx, but are used for ccx api requests and opening ccx iframes
crossOrigins:
  #- https://not.ccx.local
## host of your prometheus/victoria metrics instance, must be available on port 9090
prometheusHostname: ccx-monitoring-victoria-metrics-single-server.victoriametrics
## k8s storage class used for PVs across CCX. This is a global variable applied to all PVCs/PVs to simplify things.
storageClassName:

## this section allows to deploy a single default cmon instance in the k8s cluster
cmon:
  enabled: true
  id: "00000000-0000-0000-0000-000000000000"
  user: cmon-user
  password: 8fcf2304e46f39fa70710583a41455fd39cc5408
  ## mysql database used for cmon
  db:
    ## overwrite the below if you are using external DB for cmon
    ## defaults are set to match DB provided by ccxdeps helm chart
    host: ccxdeps-cmon-db-mysql-master
    port: 3306
    name: cmon
    user: cmon
    password: cmon
  image: eu.gcr.io/brave-night-121210/ccx-cmon:build-1.9.9-10095-1
  extra_args: # extra arguments for cmon binary
    - -s
    - --no-log-db
    - -b 0.0.0.0
    - --mysql-connect-retries=5
    - -d
  resources:
    requests:
      cpu: 100m
      memory: 1Gi
  sd:
    image: eu.gcr.io/brave-night-121210/cmon-sd:latest
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
  exporter:
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
    image: severalnines/cmon_exporter-linux-amd64:latest
  ccv2:
    image: eu.gcr.io/brave-night-121210/cc-frontend:2.1.0
  license: # REQUIRED put your CMON license key here, base64 encoded
  coreDumpEnable: false
## this section is for configuring specifics of the CCX system
ccx:
  ## affiliation allows enabling custom functionality for a customer, if applicable
  affiliation: ccx

  ## for providing DNS names to users. this should be a domain you can configure into externaldns
  userDomain: # "example.org"

  ## set admin credentials here
  ## if not set, they will be generated automatically and you can read them from admin-users secret
  ## admin-users secret can also be used to add additional admin users separated by semicolon
  admin:
    email: #admin email
    password: #admin password

  ## where to send automated support emails
  emailSupport: ""
  ## where to send user feedback emails
  emailFeedback: ""

  ## REQUIRED: list of k8s secrets containing cloud credentials
  ## Technically, CCX will start with this empty, however, you won't be able to deploy anything
  cloudSecrets: []

  # if only old world, then everything should be as before
  # if old and new, then we prefer new, but leave things enabled for migration
  # if only new, then all old things are disabled
  oldWorld: true
  newWorld: false

  # newNotify allows to run new notify in old world, which seems to work
  newNotify: true

  ## default settings for all backend components
  backend:
    image: eu.gcr.io/brave-night-121210/ccx-backend:build-3542

  ## postgresql server used by all backend components
  db:
    ## overwrite the below if you are using external DB for CCX
    ## defaults are set to match DB provided by ccxdeps helm chart
    address: acid-ccx
    port: 5432
    #username: ccx
    #password: ccx

  ## vault server used by all backend components
  vault: #this is set for default ccxdeps vault, CHANGE FOR YOUR VAULT
    addr: #YOUR VAULT ADDRESS example - http://my-vault:8200/
    token: #YOUR VAULT TOKEN
    env: #additional environment variables stored in vault secret that will be passed to vault clients
      VAULT_BASE_PATH: "kv" # vault prefix used by CCX
      #VAULT_SKIP_VERIFY: true #example

  ## common environment variables
  env:
    USE_PUBLIC_IPS: "true"
    ## Change below to set desired TTL on ExternalDNS created records
    EXTERNAL_DNS_TTL: 15

  ## common settings for all k8s ingresses
  ingress:
    ingressClassName: nginx # specify your ingressClassName here
    ssl:
      secretName: # use an existing k8s secret of type tls for CCX ingress
      clusterIssuer: # set this to your cert manager's cluster issuer or simply remove to not use one

  ## NATS+JetStream server used by all backend components
  nats:
    server: ccxdeps-ccx-nats # your nats server name/address
    clusterID: test-cluster # nats cluster ID

  ## Create role and rolebinding for ExternalName service management.
  ## Please not that this is REQUIRED for CCX to be able to create ExternalName services and
  ## allowing DNS records to be created automatically.
  ## However, if you have configured your roles externaly, you can set this to false.
  createRBAC: true

  ## individual configuration for k8s units
  ## please talk to severalnines about these settings
  services:
    admin:
      basicauth: # if not set, it will be generated automatically and you can read them from admin-basic-auth secret
        username:
        password:
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    auth:
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    backupstorage: # DEPRECATED
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    billing:
      # note that this does not disable the billing service, it disables the billing updater
      # also, this will not disable all of billing unless you also set BILLING_IMPLIED_SUBSCRIPTION in the right places
      enabled: false
      env:
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
    billingupdater:
      env:
    controllerstorage: # DEPRECATED
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    datastorestorage: # DEPRECATED
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    deployer:
      env:
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      ## REQUIRED to set deployer config to match your infrastructure
      config:
        aws_vendor:
          regions:
            eu-north-1:
              image_id: ami-05baaef454dd96656
          database_vendors:
            - name: mariadb
              security_groups:
                - cidr: 0.0.0.0/0
                  from_port: 1
                  ip_protocol: tcp
                  to_port: 65535
            - name: microsoft
              security_groups:
                - cidr: 0.0.0.0/0
                  from_port: 1
                  ip_protocol: tcp
                  to_port: 65535
            - name: percona
              security_groups:
                - cidr: 0.0.0.0/0
                  from_port: 1
                  ip_protocol: tcp
                  to_port: 65535
            - name: postgres
              security_groups:
                - cidr: 0.0.0.0/0
                  from_port: 1
                  ip_protocol: tcp
                  to_port: 65535
            - name: redis
              security_groups:
                - cidr: 0.0.0.0/0
                  from_port: 1
                  ip_protocol: tcp
                  to_port: 65535
    dispatcher:
      # please do not try to enable this
      enabled: false
      image: eu.gcr.io/brave-night-121210/ccx-alertmgr-dispatcher:latest
      env:
        CCX_SENDER_EMAIL: CHANGE_ME
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    hook:
      # please talk to severalnines for information about hooks
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    jobstorage:
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    storesMigrate:
      env:
    migrate:
      image: eu.gcr.io/brave-night-121210/ccx-migrate:build-125
    monitor:
      env:
        HOST_PAGE_SIZE: "1000"
        HOST_CHECK_PORT: "22"
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    notification:
      env:
        ALARM_DELAY: "10m"
        DEVELOPMENT_RECEIVERS: "ccx-dev@severalnines.com"
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    notify_worker:
      env:
        ## to enable/disable all outgoing email
        ENABLE_EMAIL: "false"
        ## disable emails to users
        DISABLE_USER_EMAILS: "false"
        ## to enable slack for support and feedback
        ENABLE_SLACK: "false"
        ## where to submit slack messages
        SLACK_URL: "https://hooks.slack.com/services/CHANGE_ME"
        ## slack channel, which may be overriden by the above URL
        SLACK_CHANNEL: "my-chan"
        ## pagerduty is not currently implemented
        ENABLE_PAGERDUTY: "false"
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    rbac:
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    rest_service:
      env:
        HIDE_CIDRS: "35.205.236.175/32"
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
    runnernotifications:
      env:
        QUEUE: "notification"
        WORKERS: "10"
        PAGERDUTY_ENABLED: "false"
        SLACK_CHANNEL: "-alerts-ccx-k8s-new"
        DISABLE_USER_EMAILS: "false"
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    runner:
      env:
        BILLING_SERVICE_ADDR: http://ccx-billing-service-svc:18077
        BILLING_SERVICE_INTERNAL_TOKEN: d25b95e8a7967a75b2a08cd40d67c4f792603271b148df7a79b5587f85d46d92
        CMON_PROXY_ADDR: cmon-proxy-svc:19051
        CMON_PROXY_INSECURE: "true"
        BACKUP_FULL: "0 4 * * *"
        BACKUP_INCREMENTAL: "0 * * * *"
        LOG_LEVEL: "debug"
        STORAGE_MULTIPLIER: "1"
      resources:
        requests:
          cpu: 1m
          memory: 8Mi
    stores_listener:
      # IMPORTANT stores_* should always have the same image
      ingress: false
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    stores_service:
      # IMPORTANT stores_service and stores_worker should always have the same configuration
      # these values should not normally be changed
      env:
        ENABLE_HOOKS: "true"
        ENABLE_NOTIFICATIONS: "true"
        ENABLE_K8S: "true"
        BILLING_SERVICE_INTERNAL_TOKEN: d25b95e8a7967a75b2a08cd40d67c4f792603271b148df7a79b5587f85d46d92
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    stores_worker:
      # IMPORTANT stores_service and stores_worker should always have the same configuration
      # these values should not normally be changed
      env:
        ENABLE_HOOKS: "true"
        ENABLE_NOTIFICATIONS: "true"
        ENABLE_K8S: "true"
        BILLING_SERVICE_INTERNAL_TOKEN: d25b95e8a7967a75b2a08cd40d67c4f792603271b148df7a79b5587f85d46d92
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
    uiapp:
      image: eu.gcr.io/brave-night-121210/ccx-ui-app:build-2480
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
    uiauth:
      image: eu.gcr.io/brave-night-121210/ccx-ui-auth:build-29
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    user:
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    vpcstorage:
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    cmonproxy:
      enabled: false
      image: eu.gcr.io/brave-night-121210/clustercontrol-manager:build-44
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    initVault:
      env:

  # REQUIRED primary config file for CCX
  config:
    parameters:
    - name: sql_mode
      description: "Specifies the sql_mode"
      type: "text"
      default_value: "ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
      vendors:
        - "percona"
    - name: sql_mode
      description: "Specifies the sql_mode"
      type: "text"
      default_value: "STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
      vendors:
        - "mariadb"
    - name: timeout
      description: Close the connection after a client is idle for N seconds (0 to disable)
      type: number
      default_value: 0
      validation_options: "min=0,max=10800"
      vendors:
        - "redis"
    - name: statement_timeout
      description: Sets the time to wait (in milliseconds) on a lock before checking for deadlock
      type: number
      default_value: 0
      validation_options: "min=0,max=10800"
      vendors:
        - "postgres"
    databases:
      - code: mariadb
        name: MariaDB
        versions:
          - "10.6"
        num_nodes:
          - 1
          - 2
          - 3
        info: Deploy MariaDB with either multi-master (MariaDB Cluster) or master/replicas.
        enabled: true
        beta: false
        types:
          - name: Multi-Master
            code: galera
            size_hints:
              1: 1 master node
              3: 3 multi-master nodes
          - name: Master / Replicas
            code: replication
            size_hints:
              1: 1 master node
              2: 1 master, 1 replica
              3: 1 master, 2 replicas
        ports: [ 3306 ]
      - code: percona
        name: MySQL
        versions:
          - "8"
        num_nodes:
          - 1
          - 2
          - 3
        info: Deploy MySQL with either multi-master (PXC) or master/replicas.
        enabled: true
        beta: false
        types:
          - name: Multi-Master
            code: galera
            size_hints:
              1: 1 master node
              3: 3 multi-master nodes
          - name: Master / Replicas
            code: replication
            size_hints:
              1: 1 master node
              2: 1 master, 1 replica
              3: 1 master, 2 replicas
        ports: [ 3306 ]
      - code: postgres
        name: PostgreSQL
        versions:
          - "11"
          - "14"
        num_nodes:
          - 1
          - 2
          - 3
        info: Deploy PostgreSQL using asynchronous replication for high-availability.
        enabled: true
        beta: false
        types:
          - name: Streaming Replication
            code: postgres_streaming
            size_hints:
              1: 1 master node
              2: 1 master, 1 replica
              3: 1 master, 2 replicas
        ports: [ 5432 ]
      - code: redis
        name: Redis
        versions:
          - "7"
        num_nodes:
          - 1
          - 3
        info: Deploy Redis Sentinel.
        enabled: true
        beta: false
        types:
          - name: Sentinel
            code: redis
            size_hints:
              1: 1 master node
              3: 1 master, 2 replicas
        ports: [ 6379 ]
      - code: microsoft
        name: Microsoft SQL Server
        versions:
          - "2022"
        num_nodes:
          - 1
          - 2
        info: Deploy Microsoft SQL Server.
        enabled: true
        beta: false
        types:
          - name: Single server
            code: mssql_single
            size_hints:
              1: 1 node
          - name: Always On (async commit mode)
            code: mssql_ao_async
            size_hints:
              2: 1 primary, 1 secondary
        ports: [ 1433 ]    
    clouds:
      - code: aws
        name: Amazon Web Services
        regions:
          - code: eu-north-1
            display_code: EU North 1
            name: EU (Stockholm)
            country_code: SE
            continent_code: EU
            city: Stockholm
            availability_zones:
              - code: eu-north-1a
                name: eu-north-1a
              - code: eu-north-1b
                name: eu-north-1b
              - code: eu-north-1c
                name: eu-north-1c
        network_types:
          - name: Private
            code: private
            info: All instances will be deployed in a VPC with private IP addresses.
            in_vpc: true
          - name: Public
            code: public
            info: All instances will be deployed with public IPs. Access to the public IPs is controlled by a firewall.
            in_vpc: false
        instance_types:
          - name: Tiny
            code: tiny
            type: t3.medium
            cpu: 2
            ram: 4
            disk_size: 0
            verified_level: 0
          - name: Small
            code: small
            type: m5.large
            cpu: 2
            ram: 8
            disk_size: 0
            verified_level: 0
        volume_types:
          - name: GP2
            code: gp2
            has_iops: false
            info: General Purpose SSD volume 2.
            verified_level: 0
            size:
              min: 80
              max: 16000
              default: 80
          - name: IO1
            code: io1
            has_iops: true
            info: IO Optimized volume 1.
            verified_level: 1
            size:
              min: 80
              max: 16000
              default: 80
            iops:
              min: 100
              max: 64000
              ratio: 50
              default: 1000
fluentbit:
  enabled: false
  config:
