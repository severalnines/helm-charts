## Default values for ccx.

## REQUIRED fqdn of this ccx instance, for example "ccx.example.com".
ccxFQDN: ccx.localhost
## REQUIRED fqdn for cluster control instance provided with this ccx instance.
ccFQDN: cc.localhost
## OPTIONAL cross-origin urls which are not managed by ccx, but are used for ccx api requests and opening ccx iframes
crossOrigins:
#- https://not.ccx.local
## host of your prometheus/victoria metrics instance must be available on port 9090
prometheusHostname:
## k8s storage class used for PVs across CCX. This is a global variable applied to all PVCs/PVs to simplify things.
storageClassName:

# shared configuration across all units
global:
  # default number of replicas for normal service units - this should be set to more than 1 in a production environment
  # NB. this does not apply to all units, e.g., some units will be run with a single replica always
  replicas: 1

## Autoscaling configuration for the ccx
autoscaling:
  # datastore storage will be scaled up automatically by adding additional disk and extending logical volume
  # users need to enable autoscaling in the CCX UI per datastore
  storage:
    enabled: true # set to false to disable
    threshold: 75 # threshold in percentage, beyond which the storage will be autoscaled
    percentage: 20 # the percentage by which the storage will be increased


## this section allows deploying a single default cmon instance in the k8s cluster
cmon:
  enabled: true
  id: "00000000-0000-0000-0000-000000000000"
  user: cmon-user
  password: 8fcf2304e46f39fa70710583a41455fd39cc5408
  ## mysql database used for cmon
  db:
    ## overwrite the below if you are using external DB for cmon
    ## defaults are set to match DB provided by ccxdeps helm chart
    host: ccxdeps
    port: 3306
    name: cmon
    user: cmon
    password: Super$3cr3t
  image: severalnines/cmon:2.3.1-14751
  extra_args: # extra arguments for cmon binary
    - -s
    - -b 0.0.0.0
    - --mysql-connect-retries=5
    - -d
  resources:
    requests:
      cpu: 100m
      memory: 1Gi
  sd:
    image: severalnines/cmon-sd:build-49
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
  exporter:
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
    image: severalnines/cmon_exporter-linux-amd64:main
  ccv2:
    image: severalnines/cc-frontend:2.2.5
  license: # REQUIRED put your CMON license key here, base64 encoded
  coreDumpEnable: false

## this section is for configuring specifics of the CCX system
ccx:
  ## REQUIRED: list of k8s secrets containing cloud credentials
  cloudSecrets:
    - aws

  ## affiliation allows enabling custom functionality for a customer, if applicable
  affiliation: ccx

  ## for providing DNS names to users. this should be a domain you can configure into externaldns
  userDomain: # "example.org"

  ## set admin credentials here
  ## if not set, they will be generated automatically, and you can read them from admin-users secret
  ## admin-users secret can also be used to add additional admin users separated by semicolon
  admin:
    email: #admin email
    password: #admin password

  ## where to send automated support emails
  emailSupport: ""
  ## where to send user feedback emails
  emailFeedback: ""

  ## do not enable these
  preferNewStores: false
  migrateStores: false

  # configure automatic failure handling
  autoRepair:
    enabled: true
    delay: 300 # in seconds, auto-repair will be triggered for the nodes being "down" for this long

  ## default settings for all backend components
  backend:
    image: europe-docker.pkg.dev/severalnines-public/ccx/ccx-backend:3174
  ## postgresql server used by all backend components
  db:
    ## overwrite the below if you are using external DB for CCX
    ## defaults are set to match DB provided by ccxdeps helm chart
    address: acid-ccx
    port: 5432
    #username: ccx
    #password: ccx

  ## common environment variables
  env:
    INIT_HOST_WAIT_CONFIG: "60x30s"
    USE_PUBLIC_IPS: "true"
    ## Change below to set the desired TTL on ExternalDNS created records
    EXTERNAL_DNS_TTL: 15
    ## Change below to the current date to trigger the servers upgrade described in "Lifecycle Management". The format is RFC 3339.
    LATEST_SERVER_CONFIG: "2006-01-02T15:04:05Z"
    ## Frontend Theme
    FE_THEME: "ccx"

  ## common settings for all k8s ingresses
  ingress:
    ingressClassName: nginx # specify your ingressClassName here
    ssl:
      secretName: # use an existing k8s secret of type tls for CCX ingress
      clusterIssuer: # set this to your cert manager's cluster issuer or simply remove to not use one
    annotations: #Add the ability to specify annotations
  ## NATS+JetStream server used by all backend components
  nats:
    server: ccxdeps-ccx-nats # your nats server name/address
    clusterID: test-cluster # nats cluster ID

  # keycloak is used to manage organizations, configure SSO, RBAC and plenty more
  # It is a required component for CCX
  # You can either use built in, or you can configure your own keycloak and point CCX to it
  # Please refer to CCX documentation for more information
  keycloak:
    url: # TODO: keycloak url, if set that will be used instead of embedded keycloak
    secretName: # TODO: name of the secret containing the keycloak admin password
    ingress:
      enabled: false # enable/disable keycloak ingress

  ## Create a role and rolebinding for ExternalName service management.
  ## Please note that this is REQUIRED for CCX to be able to create ExternalName services and
  ## allowing DNS records to be created automatically.
  ## However, if you have configured your roles externaly, you can set this to false.
  createRBAC: true

  cidr: # the OUTBOUND IP/MASK address of the CCX instance

  ## individual configuration for k8s units
  ## please talk to severalnines about these settings
  services:
    admin:
      basicauth: # if not set, it will be generated automatically, and you can read them from admin-basic-auth secret
        username:
        password:
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    auth:
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    backupstorage: # DEPRECATED
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    billing:
      # note that this does not disable the billing service; it disables the billing UI
      enabled: false
      # when enabled, the billing service will use the stripe and bill the users based on their subscriptions and usage
      # note that enabling this will require you to set up the stripe secret in the secrets and prices in config
      stripe: false
      env:
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
    billingupdater:
      env:
    controllerstorage: # DEPRECATED
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    datastorestorage:
      workInterval: 60
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    deployer:
      ## Set deployer config to match your infrastructure,
      ## By default, aws_vendor is enabled and configured as shown in the commented example below
      config:
        #aws_vendor:
        #  regions:
        #    eu-north-1:
        #      image_id: ami-05baaef454dd96656
        #  database_vendors:
        #    - name: mariadb
        #      security_groups:
        #        - cidr: 0.0.0.0/0
        #          from_port: 1
        #          ip_protocol: tcp
        #          to_port: 65535
        #    - name: microsoft
        #      security_groups:
        #        - cidr: 0.0.0.0/0
        #          from_port: 1
        #          ip_protocol: tcp
        #          to_port: 65535
        #    - name: percona
        #      security_groups:
        #        - cidr: 0.0.0.0/0
        #          from_port: 1
        #          ip_protocol: tcp
        #          to_port: 65535
        #    - name: postgres
        #      security_groups:
        #        - cidr: 0.0.0.0/0
        #          from_port: 1
        #          ip_protocol: tcp
        #          to_port: 65535
        #    - name: redis
        #      security_groups:
        #        - cidr: 0.0.0.0/0
        #          from_port: 1
        #          ip_protocol: tcp
        #          to_port: 65535
        #openstack_vendors:
        #  vendor_name:
        #    REQUIRED auth_url refers to a URL of the authentication service endpoint.
        #    auth_url: https://openstack_authurl
        #    REQUIRED project_id refers to a unique identifier assigned to an Openstack project. All the resources (VMs, volumes, sec. groups, floating IPs, etc.) created by ccx will be created in this project. REQUIRED
        #    project_id: 00000000000000000000000000000000

        #    REQUIRED (one of them) floating_network_id or public_pool has to be chosen to provide external access (public IPs)
        #    It is mandatory set floating_network_id or public_pool.

        #    The floating_network_id refers to a floating IP pool, which is a range of public IP addresses available for assignment to virtual machines.
        #    floating_network_id: 00000000-0000-0000-0000-000000000000

        #    The public_pool refers to the unique identifier assigned to a network of public IP pool
        #    public_pool: 00000000-0000-0000-0000-000000000000 # public

        #    REQUIRED network_id refers to the unique identifier assigned to a default network within the OpenStack environment. REQUIRED
        #    network_id: 00000000-0000-0000-0000-000000000000 # severalnines-dbaas-network1

        #    Option network_api_version and floating_ip_api_version should be only set if the Openstack uses old network APIs, otherwise we should not setthem at all and use the defaults.
        #    The network_api_version and floating_ip_api_version options are optional and should be only set if we have old APIs for network deployed in the OpenStack deployment.

        #    OPTIONAL network_api_version define which API use for network. We can choose between NetworkNeutron (default) or NetworkNova (old deprecated, but used in some old Openstack deployments).
        #    network_api_version: NetworkNeutron
        #    OPTIONAL floating_ip_api_version defines which API use for floating IPs, you can choose FloatingIPV2 or FloatingIPV3 (default), if no set it will be chosen based on network_api_version. FloatingIPV2 is the old one based on the Nova API. OPTIONAL
        #    floating_ip_api_version: FloatingIPV3

        #    We can define multiple regions and overwrite the above options in the specific region.
        #    REQUIRED at least one region
        #    regions:
        #      se-sto:
        #        image_id: 00000000-0000-0000-0000-000000000000 # REQUIRED
        #        # The secgrp_name refers to the security group name which will be used by ccx to access the datastore VMs. It should be created manually beforehand and allow all TCP traffic from all k8s nodes where ccx is running.
        #        secgrp_name: ccx-common # REQUIRED

        #    OPTIONAL S3 configuration for backups.
        #    s3:
        #      endpoint: s3_endpoint
        #      access_key: access_key
        #      secret_key: secret_key

        #    OPTIONAL root_volume section sets the size in GiB for the root volume.
        #    root_volume:
        #      enabled: true
        #      size: 30
        # gcp_vendor:
        #   project: gcp-project # replace with created project name
        #   image_id: projects/ubuntu-os-cloud/global/images/ubuntu-2204-jammy-v20240614 # replace with the image id
        #   network: default # replace with the network name if created, otherwise will fallback to default
        #   s3:
        #     enabled: true # needed for backups
        #   regions:
        #     europe-west1:
        #       azs:
        #       - europe-west1-b
        #       - europe-west1-c
        #       - europe-west1-d
        #   database_vendors: # replace `x.x.x.x/x` with the CIDR of the IP address that the CCX cluster will use to access the database nodes.
        #     - name: mariadb
        #       security_groups:
        #         - cidr: x.x.x.x/x
        #           from_port: 22
        #           ip_protocol: tcp
        #           to_port: 22
        #         - cidr: x.x.x.x/x
        #           from_port: 1000
        #           ip_protocol: tcp
        #           self: true
        #           to_port: 65535
        #     - name: microsoft
        #       security_groups:
        #         - cidr: x.x.x.x/x
        #           from_port: 22
        #           ip_protocol: tcp
        #           to_port: 22
        #         - cidr: x.x.x.x/x
        #           from_port: 1000
        #           ip_protocol: tcp
        #           self: true
        #           to_port: 65535
        #     - name: percona
        #       security_groups:
        #         - cidr: x.x.x.x/x
        #           from_port: 22
        #           ip_protocol: tcp
        #           to_port: 22
        #         - cidr: x.x.x.x/x
        #           from_port: 1000
        #           ip_protocol: tcp
        #           self: true
        #           to_port: 65535
        #     - name: postgres
        #       security_groups:
        #         - cidr: x.x.x.x/x
        #           from_port: 22
        #           ip_protocol: tcp
        #           to_port: 22
        #         - cidr: x.x.x.x/x
        #           from_port: 1000
        #           ip_protocol: tcp
        #           self: true
        #           to_port: 65535
        #     - name: redis
        #       security_groups:
        #         - cidr: x.x.x.x/x
        #           from_port: 22
        #           ip_protocol: tcp
        #           to_port: 22
        #         - cidr: x.x.x.x/x
        #           from_port: 1000
        #           ip_protocol: tcp
        #           self: true
        #           to_port: 65535
      extraCopyFiles:
        #Example below to copy the files to deployer node
        # - target: "/etc/fluent-bit/credentials"
        #   source: "/conf/credentials"
        #   owner: "root:root"
        #   perms: "0644"

    hook:
      # please talk to severalnines for information about hooks
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    jobstorage:
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    storesMigrate:
      env:
    migrate: {}
    monitor:
      env:
        HOST_PAGE_SIZE: "1000"
        HOST_CHECK_PORT: "22"
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    notification:
      env:
        ALARM_DELAY: "10m"
        DEVELOPMENT_RECEIVERS: "ccx-dev@severalnines.com"
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    notify_worker:
      email_template: |
        <h2>{{ .AlertName }}</h2>

        <p>{{ .Summary }}</p>
        <p>{{ .Description }}</p>
        <p>Click the link to check on the datastore: <a
                href="{{ .AppURL }}/projects/default/data-stores/{{ .StoreID }}/overview">{{ .StoreName }}</a>
        </p>
        <hr/>
        <p style="color: gray; font-size: small;">You can change your notification settings <a
                href="{{ .AppURL }}/projects/default/data-stores/{{ .StoreID }}/settings">here</a>.</p>

      env:
        ## to enable/disable all outgoing email
        ENABLE_EMAIL: "false"
        ## disable emails to users
        DISABLE_USER_EMAILS: "false"
        ## to enable Slack for support and feedback
        ENABLE_SLACK: "false"
        ## where to submit Slack messages
        SLACK_URL: "https://hooks.slack.com/services/CHANGE_ME"
        ## Slack channel, which may be overriden by the above URL
        SLACK_CHANNEL: "my-chan"
        ## pagerduty is not currently implemented
        ENABLE_PAGERDUTY: "false"
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    rest_service:
      env:
        HIDE_CIDRS: "35.205.236.175/32"
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
    runnernotifications:
      env:
        QUEUE: "notification"
        WORKERS: "10"
        PAGERDUTY_ENABLED: "false"
        SLACK_CHANNEL: "-alerts-ccx-k8s-new"
        DISABLE_USER_EMAILS: "false"
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    runner:
      env:
        CMON_PROXY_ADDR: cmon-proxy-svc:19051
        CMON_PROXY_INSECURE: "true"
        BACKUP_FULL: "0 4 * * *"
        BACKUP_INCREMENTAL: "0 * * * *"
        LOG_LEVEL: "debug"
        STORAGE_MULTIPLIER: "1"
      resources:
        requests:
          cpu: 1m
          memory: 8Mi
    stores_listener:
      # IMPORTANT stores_* should always have the same image
      ingress: false
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    stores_migrate:
      env:
    stores_service:
      # IMPORTANT stores_service and stores_worker should always have the same configuration
      # these values should not normally be changed
      env:
        ENABLE_HOOKS: "true"
        ENABLE_NOTIFICATIONS: "true"
        ENABLE_K8S: "true"
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
      extraVolumeMounts:
        #The example below for volume mount
        # - name: conf-fluentbit
        #   mountPath: "/conf/credentials"
        #   subPath: "credentials"
    stores_worker:
      # IMPORTANT stores_service and stores_worker should always have the same configuration
      # these values should not normally be changed
      env:
        ENABLE_HOOKS: "true"
        ENABLE_NOTIFICATIONS: "true"
        ENABLE_K8S: "true"
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      extraVolumeMounts:
        #The example below for volume mount
        # - name: conf-fluentbit
        #   mountPath: "/conf/credentials"
        #   subPath: "credentials"
    uiapp:
      image: europe-docker.pkg.dev/severalnines-public/ccx/ccx-ui-app:780
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
    uiauth:
      image: europe-docker.pkg.dev/severalnines-public/ccx/ccx-ui-auth:2
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    uiadmin:
      image: europe-docker.pkg.dev/severalnines-public/ccx/ccx-ui-admin:80
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    user:
      env:
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
    cmonproxy:
      enabled: false
      image: severalnines/clustercontrol-manager:latest
      resources:
        requests:
          cpu: 1m
          memory: 5Mi

  # REQUIRED primary config file for CCX
  config:
    # databases:
    # REQUIRED. All fields are mandatory unless otherwise specified.
    #
    # database configurations supported by CCX which the user can deploy
    # each entry is in the following format
    # - code: database code.
    # - name: database name as shown to the user
    # - versions: list of supported versions
    # - num_nodes: list of supported number of nodes
    # - info: description of the database as shown to the user in the tooltip
    # - enabled: OPTIONAL. if set to false, the database will not be made available to the user
    # - beta: OPTIONAL. if set to true, the database will be shown to the user as beta
    # - ports: list of ports used by the database; these ports will be opened in the firewall
    # - types: list of supported deployment configurations
    #
    # each type is in the following format
    # - name: type name as shown to the user
    # - code: type code. eg. galera or replicaton, see the table below for supported types.
    # - size_hints: list of supported number of nodes. map of "size: description"
    #
    # supported configurations:
    # | code       | version     | type.code
    # |------------|-------------|--------------------
    # | mariadb    |       10.11 | replication
    # | mariadb    |       10.11 | galera
    # | mariadb    |       11.4  | replication
    # | mariadb    |       11.4  | galera
    # | percona    |       8     | replication
    # | percona    |       8     | galera
    # | microsoft  |       2019  | mssql_single
    # | microsoft  |       2019  | mssql_ao_async
    # | microsoft  |       2022  | mssql_single
    # | microsoft  |       2022  | mssql_ao_async
    # | postgresql |       11    | postgres_streaming
    # | postgresql |       14    | postgres_streaming
    # | postgresql |       15    | postgres_streaming
    # | postgresql |       16    | postgres_streaming
    # | redis      |       7     | redis
    #
    databases:
      - code: mariadb
        name: MariaDB
        versions:
          - "10.11"
          - "11.4"
          - "11.8"
        num_nodes:
          - 1
          - 2
          - 3
        info: Deploy MariaDB with either multi-master (MariaDB Cluster) or master/replicas.
        enabled: true
        beta: false
        types:
          - name: Multi-Master
            code: galera
            size_hints:
              1: 1 master node
              3: 3 multi-master nodes
          - name: Master / Replicas
            code: replication
            size_hints:
              1: 1 master node
              2: 1 master, 1 replica
              3: 1 master, 2 replicas
        ports: [ 3306 ]
      - code: percona
        name: MySQL
        versions:
          - "8"
        num_nodes:
          - 1
          - 2
          - 3
        info: Deploy MySQL with either multi-master (PXC) or master/replicas.
        enabled: true
        beta: false
        types:
          - name: Multi-Master
            code: galera
            size_hints:
              1: 1 master node
              3: 3 multi-master nodes
          - name: Master / Replicas
            code: replication
            size_hints:
              1: 1 master node
              2: 1 master, 1 replica
              3: 1 master, 2 replicas
        ports: [ 3306 ]
      - code: postgres
        name: PostgreSQL
        versions:
          - "15"
          - "16"
          - "17"
        num_nodes:
          - 1
          - 2
          - 3
        info: Deploy PostgreSQL using asynchronous replication for high-availability.
        enabled: true
        beta: false
        types:
          - name: Streaming Replication
            code: postgres_streaming
            size_hints:
              1: 1 master node
              2: 1 master, 1 replica
              3: 1 master, 2 replicas
        ports: [ 5432 ]
      - code: redis
        name: Redis
        versions:
          - "7"
        num_nodes:
          - 1
          - 3
        info: Deploy Redis Sentinel.
        enabled: true
        beta: false
        types:
          - name: Sentinel
            code: redis
            size_hints:
              1: 1 master node
              3: 1 master, 2 replicas
        ports: [ 6379, 16379 ]
      - code: microsoft
        name: Microsoft SQL Server
        versions:
          - "2022"
        num_nodes:
          - 1
          - 2
        info: Deploy Microsoft SQL Server.
        enabled: true
        beta: false
        types:
          - name: Single server
            code: mssql_single
            size_hints:
              1: 1 node
          - name: Always On (async commit mode)
            code: mssql_ao_async
            size_hints:
              2: 1 primary, 1 secondary
        ports: [ 1433 ]
    # clouds:
    # REQUIRED. All fields are mandatory unless otherwise specified.
    #
    # cloud configurations supported by CCX where the user make deployments
    # each entry is in the following format
    # - code: cloud code.
    # - name: cloud name as shown to the user
    # - regions: list of supported regions
    # - network_types: list of supported network types
    # - instance_types: list of supported instance types
    # - volume_types: list of supported volume types
    #
    # for regions, each entry is in the following format
    # - code: region code. must be a valid region code as defined by the cloud vendor.
    # - display_code: region display code as shown to the user.
    # - name: region name as shown to the user.
    # - country_code: region country code. used for displaying the flag.
    # - continent_code: region continent code. used for displaying the flag.
    # - city: region city. used for displaying the flag.
    # - availability_zones: list of supported availability zones
    #  - code: availability zone code. must be a valid availability zone code as defined by the cloud vendor.
    #  - name: availability zone name as shown to the user.
    #
    # for network_types, each entry is in the following format
    # - name: network type name as shown to the user
    # - code: network type code. eg. `public` or `private`
    # - info: description of the network type as shown to the user
    # - in_vpc: if set to true, the instances will be deployed in a VPC
    #
    # for instance_types, each entry is in the following format
    # - name: instance type name as shown to the user
    # - code: instance type code (flavor).
    # - type: instance type as defined by the cloud vendor.
    # - cpu: number of CPUs
    # - ram: amount of RAM in GB
    # - disk_size: amount of disk space in GB
    #
    # for volume_types, each entry is in the following format
    # - name: volume type name as shown to the user
    # - code: volume type code.
    # - has_iops: if set to true, the volume type supports IOPS
    # - info: description of the volume type as shown to the user
    # - size:
    #   - min: minimum size in GB
    #   - max: maximum size in GB
    #   - default: default size in GB

    clouds:
      - code: aws
        name: Amazon Web Services
        has_vpcs: true
        regions:
          - code: eu-north-1
            display_code: EU North 1
            name: EU (Stockholm)
            country_code: SE
            continent_code: EU
            city: Stockholm
            availability_zones:
              - code: eu-north-1a
                name: eu-north-1a
              - code: eu-north-1b
                name: eu-north-1b
              - code: eu-north-1c
                name: eu-north-1c
        network_types:
          - name: Private
            code: private
            info: All instances will be deployed in a VPC with private IP addresses.
            in_vpc: true
          - name: Public
            code: public
            info: All instances will be deployed with public IPs. Access to the public IPs is controlled by a firewall.
            in_vpc: false
        instance_types:
          - name: Tiny
            code: tiny
            type: t3.medium
            cpu: 2
            ram: 4
            disk_size: 0
            verified_level: 0
          - name: Small
            code: small
            type: m5.large
            cpu: 2
            ram: 8
            disk_size: 0
            verified_level: 0
        volume_types:
          - name: GP2
            code: gp2
            has_iops: false
            info: General Purpose SSD volume 2.
            verified_level: 0
            size:
              min: 80
              max: 16000
              default: 80
          - name: IO1
            code: io1
            has_iops: true
            info: IO Optimized volume 1.
            verified_level: 1
            size:
              min: 80
              max: 16000
              default: 80
            iops:
              min: 100
              max: 64000
              ratio: 50
              default: 1000

    # parameters:
    # OPTIONAL. This section is optional. If not set the DB Parameters feature will be disabled.
    #
    # parameters is a list of database parameters that can be set by the user
    # - name: REQUIRED. parameter name as supported by the database vendor.
    # - description: OPTIONAL. description of the parameter as shown to the user
    # - type: REQUIRED. type of the parameter. supported types are "text", "number", "boolean", "select"
    # - default_value: OPTIONAL. default value of the parameter as shown to the user. It is not applied by default.
    # - validation_options: OPTIONAL. validation options for the parameter. supported options are "min", "max", "min_length", "max_length", "regex"
    # - vendors: REQUIRED. list of database vendors that support the parameter. the format is "vendor:dbtype:version". Partial matches are supported as well.
    #
    # Vendor partial matching examples:
    #
    # - "mariadb" matches all mariadb versions
    # - "mariadb:replication" matches all mariadb replication
    # - ":replication:" matches all replication
    # - "mariadb::10.6" matches all mariadb 10.6

    parameters:
      - name: sql_mode
        description: "Specifies the sql_mode"
        type: "text"
        default_value: "ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
        allowed_values:
          - ALLOW_INVALID_DATES
          - ANSI_QUOTES
          - ERROR_FOR_DIVISION_BY_ZERO
          - HIGH_NOT_PRECEDENCE
          - IGNORE_SPACE
          - NO_AUTO_CREATE_USER
          - NO_AUTO_VALUE_ON_ZERO
          - NO_BACKSLASH_ESCAPES
          - NO_ENGINE_SUBSTITUTION
          - NO_FIELD_OPTIONS
          - NO_KEY_OPTIONS
          - NO_TABLE_OPTIONS
          - NO_UNSIGNED_SUBTRACTION
          - NO_ZERO_DATE
          - NO_ZERO_IN_DATE
          - ONLY_FULL_GROUP_BY
          - PIPES_AS_CONCAT
          - REAL_AS_FLOAT
          - STRICT_ALL_TABLES
          - STRICT_TRANS_TABLES
        vendors:
          - "percona"
      - name: sql_mode
        description: "Specifies the sql_mode"
        type: "text"
        default_value: "STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
        allowed_values:
          - ALLOW_INVALID_DATES
          - ANSI
          - ANSI_QUOTES
          - DB2
          - EMPTY_STRING_IS_NULL
          - ERROR_FOR_DIVISION_BY_ZERO
          - HIGH_NOT_PRECEDENCE
          - IGNORE_BAD_TABLE_OPTIONS
          - IGNORE_SPACE
          - MAXDB
          - MSSQL
          - MYSQL323
          - MYSQL40
          - NO_AUTO_CREATE_USER
          - NO_AUTO_VALUE_ON_ZERO
          - NO_BACKSLASH_ESCAPES
          - NO_DIR_IN_CREATE
          - NO_ENGINE_SUBSTITUTION
          - NO_FIELD_OPTIONS
          - NO_KEY_OPTIONS
          - NO_TABLE_OPTIONS
          - NO_UNSIGNED_SUBTRACTION
          - NO_ZERO_DATE
          - NO_ZERO_IN_DATE
          - ONLY_FULL_GROUP_BY
          - ORACLE
          - PAD_CHAR_TO_FULL_LENGTH
          - PIPES_AS_CONCAT
          - POSTGRESQL
          - REAL_AS_FLOAT
          - SIMULTANEOUS_ASSIGNMENT
          - STRICT_ALL_TABLES
          - STRICT_TRANS_TABLES
          - TIME_ROUND_FRACTIONAL
          - TRADITIONAL
        vendors:
          - "mariadb"
      - name: timeout
        description: Close the connection after a client is idle for N seconds (0 to disable)
        type: number
        default_value: "0"
        validation_options: "min=0,max=10800"
        vendors:
          - "redis"
          - "valkey_sentinel"
      - name: group_concat_max_len
        description: The maximum permitted result length in bytes for the GROUP_CONCAT() function
        type: "number"
        default_value: "1024"
        validation_options: "min=1024,max=104857600"
        vendors:
          - percona
          - mariadb
      - name: table_open_cache
        description: The number of open tables for all threads
        type: "number"
        default_value: "4000"
        validation_options: "min=4000,max=10000"
        vendors:
          - percona
          - mariadb
      - name: wait_timeout
        description: The number of seconds the server waits for activity on a noninteractive connection before closing it.
        type: "number"
        default_value: "28800"
        validation_options: "min=3000,max=28800"
        vendors:
          - percona
          - mariadb
      - name: interactive_timeout
        description: The number of seconds the server waits for activity on an interactive connection before closing it. An interactive client is defined as a client that uses the CLIENT_INTERACTIVE option to mysql_real_connect(). See also wait_timeout.
        type: "number"
        default_value: "28800"
        validation_options: "min=3000,max=28800"
        vendors:
          - percona
          - mariadb
      - name: max_allowed_packet
        description: The maximum size of one packet or any generated/intermediate string, or any parameter sent by the mysql_stmt_send_long_data() C API function.
        type: "number"
        default_value: "536870912"
        validation_options: "min=536870912,max=1073741824"
        vendors:
          - percona
          - mariadb
      - name: old_mode
        description: "Used for getting MariaDB to emulate behavior from an old version of MySQL or MariaDB. See https://mariadb.com/kb/en/old-mode/ for the full list."
        type: "text"
        default_value: "UTF8_IS_UTF8MB3"
        allowed_values:
          - UTF8_IS_UTF8MB3
        vendors:
          - mariadb
      - name: time_zone
        description: "The current time zone. This variable is used to initialize the time zone for each client that connects."
        type: "text"
        default_value: "SYSTEM"
        validation_options: "min=-13:59,max=+14:00"
        vendors:
          - mariadb
          - percona
      - name: require_secure_transport
        description: "The current time zone. This variable is used to initialize the time zone for each client that connects."
        type: "text"
        default_value: "OFF"
        allowed_values:
          - "OFF"
          - "ON"
        vendors:
          - mariadb
          - percona
      - name: collation_server
        description: "Specifies the collation_server"
        type: "text"
        default_value: "utf8mb4_0900_ai_ci"
        vendors:
          - "percona"
# postgresql
      - name: statement_timeout
        description: Sets the time to wait (in milliseconds) on a lock before checking for deadlock
        type: number
        default_value: "0"
        validation_options: "min=0,max=10800"
        vendors:
          - "postgres"
      - name: wal_keep_size
        description: Specifies the minimum size of past WAL files kept in the pg_wal directory (unit is MB).
        type: "number"
        default_value: "1024"
        validation_options: "min=1024,max=8192"
        vendors:
          - postgres
      - name: max_wal_senders
        description: Specifies the maximum number of concurrent connections from standby servers or streaming base backup clients.
        type: "number"
        default_value: "16"
        validation_options: "min=16,max=32"
        vendors:
          - postgres
      - name: max_wal_size
        description: Maximum size to let the WAL grow during automatic checkpoints (unit is MB).
        type: "number"
        default_value: "1024"
        validation_options: "min=1024,max=8192"
        vendors:
          - postgres
      - name: min_wal_size
        description: Sets the minimum size to shrink the WAL to (unit is MB).
        type: "number"
        default_value: "80"
        validation_options: "min=2,max=2147483647"
        vendors:
          - postgres
      - name: checkpoint_timeout
        description: Sets the maximum time between automatic WAL checkpoints.
        type: "number"
        default_value: "300"
        validation_options: "min=300,max=3600"
        vendors:
          - postgres
      - name: deadlock_timeout
        description: Sets the time to wait on a lock before checking for deadlock.
        type: "number"
        default_value: "1000"
        validation_options: "min=1,max=2147483647"
        vendors:
          - postgres
      - name: lock_timeout
        description: Sets the maximum allowed duration of any wait for a lock.
        type: "number"
        default_value: "0"
        validation_options: "min=0,max=2147483647"
        vendors:
          - postgres
      - name: autovacuum
        description: Controls whether the server should run the autovacuum launcher daemon.
        type: "boolean"
        default_value: "true"
        vendors:
          - postgres
      - name: autovacuum_naptime
        description: Time to sleep between autovacuum runs.
        type: "number"
        default_value: "60"
        validation_options: "min=1,max=86400"
        vendors:
          - postgres
      - name: autovacuum_work_mem
        description: "Sets the maximum memory to be used by each autovacuum worker process (unit is KB).  It defaults to -1, indicating that the value of maintenance_work_mem should be used instead."
        type: "number"
        default_value: "-1"
        validation_options: "min=-1,max=2147483647"
        vendors:
          - postgres
      - name: log_min_duration_statement
        description: "Causes the duration of each completed statement to be logged if the statement ran for at least the specified amount of time."
        type: "number"
        default_value: "-1"
        validation_options: "min=-1,max=2147483647"
        vendors:
          - postgres
      - name: log_statement
        description: "Controls which SQL statements are logged. Valid values are none (off), ddl, mod, and all (all statements)."
        type: "text"
        default_value: "none"
        allowed_values:
          - none
          - ddl
          - mod
          - all
        vendors:
          - postgres
      - name: max_parallel_workers
        description: "Sets the maximum number of parallel workers that can be active at one time."
        type: "number"
        default_value: "8"
        validation_options: "min=0,max=1024"
        vendors:
          - postgres
      - name: max_parallel_workers_per_gather
        description: "Sets the maximum number of workers that can be started by a single Gather or Gather Merge node."
        type: "number"
        default_value: "2"
        validation_options: "min=0,max=1024"
        vendors:
          - postgres
      - name: effective_io_concurrency
        description: "Sets the number of concurrent disk I/O operations that PostgreSQL expects can be executed simultaneously. The allowed range is 1 to 1000, or zero to disable issuance of asynchronous I/O requests."
        type: "number"
        default_value: "1"
        validation_options: "min=0,max=1000"
        vendors:
          - postgres
      - name: parallel_setup_cost
        description: "Sets the number of concurrent disk I/O operations that PostgreSQL expects can be executed simultaneously.  The allowed range is 1 to 1000, or zero to disable issuance of asynchronous I/O requests."
        type: "number"
        default_value: "1000"
        validation_options: "min=0,max=1000000000000000000000"
        vendors:
          - postgres
      - name: parallel_tuple_cost
        description: "Sets the planner's estimate of the cost of transferring one tuple from a parallel worker process to another process. The default is 0.1."
        type: "number"
        default_value: "0.1"
        validation_options: "min=0,max=1000000000000000000000"
        vendors:
          - postgres
      - name: random_page_cost
        description: "Sets the planner's estimate of the cost of a nonsequentially fetched disk page."
        type: "number"
        default_value: "4"
        validation_options: "min=0,max=1000000000000000000000"
        vendors:
          - postgres
    backup:
      # OPTIONAL. This section is optional. If not set, the Backup schedule will not be randomized.
      randomize_schedule:
        enabled: true # enable/disable randomization
        start_hour: 0 # start hour, 0-23
        end_hour: 6 # end hour, 0-23. Must be greater than start_hour
        interval_minutes: 15 # randomize interval in minutes, 0-60
fluentbit:
  enabled: true
  # Provide Ingress hostname of loki from ccxdeps. If not set, it will automatically preconfigure from ccxdeps.
  host:
  port: 443
  # Provide Fluent-bit extra output config to forward logs to another logging tool
  extraOutputConfig: |

  # Provide Credentials incase if needed for output plugins
  extraSecretMounts: |
